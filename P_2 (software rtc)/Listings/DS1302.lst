C51 COMPILER V9.60.7.0   DS1302                                                            09/25/2024 11:53:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS
                    -1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <reg51.h>
   2          #include "DS1302.h"
   3          #include <string.h>
   4          #include "stdio.h"
   5          
   6          
   7          
   8          
   9          
  10          unsigned int read_bytes[12];    
  11          void SCLK_Pulse()
  12          {
  13   1        DS1302_CLK=1;
  14   1        DS1302_CLK=0;
  15   1      }
  16          void send_bit(unsigned int bitt)
  17          {
  18   1        if(bitt!=0)
  19   1        {
  20   2          DS1302_IO=1;                    //one bit write
  21   2        }
  22   1        else
  23   1        {
  24   2          DS1302_IO=0;
  25   2        }
  26   1      }
  27          void write_byte(unsigned int byte)
  28          {
  29   1        unsigned int i,Bit;
  30   1        for(i=0; i<8; i++)
  31   1        {                                        //rtc write byte
  32   2          Bit =byte &(1<<i);
  33   2          send_bit(Bit);
  34   2          SCLK_Pulse();
  35   2        }
  36   1      }
  37          unsigned char read_byte(unsigned char cmd)
  38          {
  39   1        unsigned int j,dat=0;
  40   1        write_byte(cmd);
  41   1        for(j=0; j<8; j++)
  42   1        {
  43   2          dat>>=1;
  44   2          if(DS1302_IO)
  45   2          {
  46   3            dat|=0x80;
  47   3          }
  48   2          else
  49   2          {
  50   3            dat&=0x7F;
  51   3          }
  52   2          SCLK_Pulse();
  53   2        }
  54   1        return dat;
C51 COMPILER V9.60.7.0   DS1302                                                            09/25/2024 11:53:34 PAGE 2   

  55   1      }
  56          void DS1302_writebyte(unsigned char cmd, unsigned char value)
  57          {
  58   1        DS1302_CE=1;
  59   1        write_byte(cmd);                      //rtc write byte at address
  60   1        write_byte(value);
  61   1        DS1302_CE=0;
  62   1      }
  63          void DS1302_readbyte()
  64          {
  65   1        unsigned int dat=0,i,j;
  66   1        DS1302_CE=1;
  67   1        
  68   1        write_byte(DS1302_READ_BURST);
  69   1        for(i=0; i<8; i++)           //store in array
  70   1        {
  71   2          dat=0;
  72   2          for(j=0; j<8; j++)         //bit by bit read
  73   2          {
  74   3            dat>>=1;
  75   3          if(DS1302_IO)
  76   3          {                                           //reading ta enable
  77   4            dat|=0x80;
  78   4          }
  79   3          else
  80   3          {
  81   4            dat&=0x7F;
  82   4          }
  83   3          SCLK_Pulse();
  84   3          }
  85   2          read_bytes[i]=dat;
  86   2        } 
  87   1        DS1302_CE=0;  
  88   1      }
  89          void DS1302_init()
  90          {
  91   1        unsigned char r;
  92   1        DS1302_CE=0; 
  93   1        DS1302_CLK=0;
  94   1        DS1302_writebyte(DS1302_CONTROL,0x00);
  95   1        DS1302_writebyte(DS1302_CHARGER,0xAB);
  96   1        
  97   1        r=read_byte(DS1302_SECOND_READ);                
  98   1        if((r&DS1302_SECOND_READ)!=0)
  99   1          DS1302_writebyte(DS1302_SECOND,0);              //zarah value zero ka
 100   1      }
 101          
 102          void DS1302_settime(unsigned char hour, unsigned char minute, unsigned char second)
 103          {
 104   1        DS1302_writebyte(DS1302_SECOND,second);
 105   1        DS1302_writebyte(DS1302_MINUTE,minute);
 106   1        DS1302_writebyte(DS1302_HOUR,hour);
 107   1      
 108   1      }
 109          void lcd_display(unsigned char number)
 110          {
 111   1        lcd_char(((number>>4)&0x0F)+0x30); //ten
 112   1        lcd_char((number&0x0F)+0x30);   //unit
 113   1      }
 114          
 115          void DS1302_gettime(void)
 116          {
C51 COMPILER V9.60.7.0   DS1302                                                            09/25/2024 11:53:34 PAGE 3   

 117   1        lcd_set_cursor(0,0);
 118   1        lcd_string("TIME:");
 119   1        
 120   1        lcd_set_cursor(0,6);
 121   1        lcd_display(read_bytes[2]);
 122   1        lcd_char(':');
 123   1        delay(10);
 124   1        
 125   1        
 126   1        lcd_set_cursor(0,9);
 127   1        lcd_display(read_bytes[1]);
 128   1        lcd_char(':');
 129   1        delay(10);
 130   1        
 131   1        lcd_set_cursor(0,12);
 132   1        lcd_display(read_bytes[0]);
 133   1        delay(10);
 134   1          
 135   1      }
 136          //void DS1302_setdate(unsigned char day, unsigned char month, unsigned char year)
 137          //{
 138          //DS1302_writebyte(DS1302_DATE,day);
 139          //DS1302_writebyte(DS1302_MONTH,month);
 140          //DS1302_writebyte(DS1302_YEAR,year);
 141          //}
 142          //void DS1302_getdate(void)
 143          //{
 144          //  lcd_set_cursor(1,0);
 145          //  lcd_string("DATE:");
 146          //  
 147          //  lcd_set_cursor(1,6);
 148          //  lcd_display(read_bytes[3]);
 149          //  lcd_char(':');
 150          //  delay(10);
 151          //  
 152          //  lcd_set_cursor(1,9);
 153          //  lcd_display(read_bytes[4]);
 154          //  lcd_char(':');
 155          //  delay(10);
 156          //  
 157          //  lcd_set_cursor(1,12);
 158          //  lcd_display(read_bytes[6]);
 159          //  delay(10);
 160          //}
 161          void inttoASCII(int num, char *buffer)
 162          {
 163   1        sprintf(buffer, "%d", num);
 164   1      }
 165          void lcd_display_int(int num)
 166          {
 167   1        char buffer[10];
 168   1        inttoASCII(num, buffer);
 169   1        lcd_string(buffer);
 170   1        
 171   1      }
 172          
 173          
 174          //unsigned int dayinmonth (unsigned char mon, unsigned int year)
 175          //  {
 176          //    unsigned int day;
 177          //    switch(mon)
 178          //    {
C51 COMPILER V9.60.7.0   DS1302                                                            09/25/2024 11:53:34 PAGE 4   

 179          //      case 1: case 3: case 5: case 7: case 8: case 10: case 12:
 180          //        day=31;
 181          //      break;
 182          //      case 4: case 6: case 9: case 11:
 183          //        day=30;
 184          //      break;
 185          //      case 2:
 186          //        if((year % 4 == 0 && year % 100 != 0) || (year % 400 ==0))
 187          //        {
 188          //          day=29;
 189          //        }
 190          //        else
 191          //        {
 192          //          day=28;
 193          //        }
 194          //        break;
 195          //      default:
 196          //        day=0;
 197          //      
 198          //    }
 199          //    return day;
 200          //  }
 201          
 202          void lcd_init()
 203          {
 204   1        lcd_command(0x38);
 205   1        lcd_command(0x0C);
 206   1        lcd_command(0x01);
 207   1        lcd_command(0x80);
 208   1        
 209   1      }
 210          
 211          void lcd_command(unsigned char cmd)
 212          {
 213   1        lcd_data=cmd;
 214   1        RW=0;
 215   1        RS=0;
 216   1        EN=1;
 217   1        delay(10);
 218   1        EN=0;
 219   1        delay(10);
 220   1      }
 221          void lcd_char(unsigned char dat)
 222          {
 223   1        lcd_data=dat;
 224   1        RW=0;
 225   1        RS=1;
 226   1        EN=1;
 227   1        delay(10);
 228   1        EN=0;
 229   1        delay(10);
 230   1      }
 231          void lcd_string(unsigned char *str)
 232          {
 233   1        int i;
 234   1        for(i=0; str[i]!=0; i++)
 235   1        {
 236   2          lcd_char(str[i]);
 237   2        }
 238   1        
 239   1      }
 240          void lcd_set_cursor(unsigned char row, unsigned char col)
C51 COMPILER V9.60.7.0   DS1302                                                            09/25/2024 11:53:34 PAGE 5   

 241          {
 242   1        unsigned char position;
 243   1        if(row==0)
 244   1        {
 245   2          position=0x80+col;
 246   2        }
 247   1        else
 248   1        {
 249   2          position=0xC0+col;
 250   2        }
 251   1        lcd_command(position);
 252   1      }
 253          
 254          void delay (unsigned int time)
 255          {
 256   1        unsigned int i,j;
 257   1        for(i=0; i<time; i++)
 258   1        for(j=0; j<127; j++);
 259   1        
 260   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    571    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
